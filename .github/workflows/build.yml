name: Build Production Images/Assets

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-api:
    name: "Build & Push API Image"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      API_IMAGE_REPO: ghcr.io/lucaspickering/beta-spray-api

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v2
        with:
          context: ./api/
          file: ./api/prd.Dockerfile
          # `latest` tag is convenient to have, and also lets us download
          # the cache from a previous build. The sha-versioned tag is the one
          # used in deployments.
          tags: ${{ env.API_IMAGE_REPO }}:latest,${{ env.API_IMAGE_REPO }}:${{ github.sha }}
          push: ${{ github.ref == 'refs/heads/master' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Django static assets
        # Use dev settings here so we don't need to load secrets
        run: >
          docker run
          -v $PWD/static:/app/src/static
          -e DJANGO_SETTINGS_MODULE=beta_spray.settings.settings_dev
          ${{ env.API_IMAGE_REPO }}:latest ./m.sh collectstatic

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: api-static-assets
          path: ./static/

  build-ui:
    name: "Build UI static assets"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Cache npm files
        uses: actions/cache@v2
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('ui/package-lock.json') }}

      - name: Install dependencies
        working-directory: ui/
        run: npm install

      - name: Build
        working-directory: ui/
        run: NODE_ENV=production npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ui-static-assets
          path: ./ui/build/

  upload:
    name: "Upload static assets to GCS bucket"
    runs-on: ubuntu-latest
    # Only upload assets on master
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-api
      - build-ui
    permissions:
      contents: read
      id-token: write

    steps:
      # Needed in order to pass auth creds to subsequent steps
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Cloud auth
        uses: google-github-actions/auth@v0
        with:
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_ID_PROVIDER }}

      # Unpack both UI and API assets into the directory structure that we'll
      # want in the bucket, so we can upload them all at once

      - name: Download UI static assets
        uses: actions/download-artifact@v3
        with:
          name: ui-static-assets
          path: ./assets/

      - name: Download API static assets
        uses: actions/download-artifact@v3
        with:
          name: api-static-assets
          path: ./assets/api-static/

      - name: Upload static assets to GCS
        uses: google-github-actions/upload-cloud-storage@v0
        with:
          path: ./assets/
          parent: false # Don't include /assets/ in the bucket
          destination: beta-spray-static/${{ github.sha }}/
