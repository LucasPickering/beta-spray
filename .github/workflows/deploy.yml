name: Deploy Site

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deploy Environment
        type: environment
        required: true
  workflow_call:
    inputs:
      environment:
        description: Deploy Environment
        type: string
        required: true

jobs:
  # The hostname for the deployment is stored in the environment, which means
  # we have to read it *before* the job that needs it in the environment definition
  read-env:
    name: Read hostname from environment
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      hostname: ${{ steps.read-env.outputs.hostname }}
    steps:
      - name: Read hostname from environment
        id: read-env
        run: |
          HOSTNAME=${{ vars.HOSTNAME }}
          echo "Hostname is $HOSTNAME"
          echo "hostname=$HOSTNAME" >> $GITHUB_OUTPUT

  deploy-app:
    name: Deploy Kubernetes app
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ needs.read-env.outputs.hostname }}/
    needs:
      - read-env
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ vars.CLUSTER_NAME }} --expiry-seconds 600

      - name: Helm deploy
        # The two TLS secrets have to be put in files because they're multi-line
        run: |
          echo "${{ secrets.TLS_CERT }}" > /tmp/tls_cert
          echo "${{ secrets.TLS_KEY }}" > /tmp/tls_key
          helm upgrade beta-spray ./deploy/helm/ \
            --install \
            --namespace ${{ secrets.NAMESPACE }} \
            --create-namespace \
            --set-string versionSha="${{ github.sha }}" \
            --set-string hostname="${{ vars.HOSTNAME }}" \
            --set-string mediaBucket="${{ secrets.MEDIA_BUCKET }}" \
            --set-string staticAssetsHost=storage.googleapis.com \
            --set-string staticAssetsBucket="${{ secrets.STATIC_ASSETS_BUCKET }}" \
            --set-string apiGcpKey="${{ secrets.API_GCP_KEY }}" \
            --set-string apiSecretKey="${{ secrets.API_SECRET_KEY }}" \
            --set-string databasePassword="${{ secrets.DATABASE_PASSWORD }}" \
            --set-file tlsCert=/tmp/tls_cert \
            --set-file tlsKey=/tmp/tls_key
