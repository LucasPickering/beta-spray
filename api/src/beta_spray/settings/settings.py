"""
Django settings for beta_spray project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "dbbackup",
    "debug_toolbar",  # Disabled in prod via INTERNAL_IPS
    "strawberry.django",
    "strawberry_django_plus",
    "rules",
    "social_django",
    "core",
    "bs_auth",
]

MIDDLEWARE = [
    "strawberry_django_plus.middlewares.debug_toolbar.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Uncomment to test UI loading state
    # "core.middleware.TimeDelayMiddleware",
]

# Auth
AUTHENTICATION_BACKENDS = [
    "social_core.backends.google.GoogleOAuth2",
    "django.contrib.auth.backends.ModelBackend",  # For admin/testing logins
    "rules.permissions.ObjectPermissionBackend",
    "bs_auth.backends.GuestBackend",
]
SOCIAL_AUTH_JSONFIELD_ENABLED = True
SOCIAL_AUTH_PIPELINE = (
    "social_core.pipeline.social_auth.social_details",
    "social_core.pipeline.social_auth.social_uid",
    "social_core.pipeline.social_auth.auth_allowed",
    "bs_auth.pipeline.find_existing_user",
    # This doesn't do anything currently since we only allow one provider, but
    # eventually it may be helpful
    "social_core.pipeline.social_auth.associate_by_email",
    "social_core.pipeline.user.create_user",
    "social_core.pipeline.social_auth.associate_user",
    "social_core.pipeline.social_auth.load_extra_data",
    "social_core.pipeline.user.user_details",
    "bs_auth.pipeline.convert_guest_user",
)
# Disable protection for the email field, because we want to populate it when
# converting guest users. Keep it "immutable" though, meaning it won't be
# updated if not empty.
SOCIAL_AUTH_NO_DEFAULT_PROTECTED_USER_FIELDS = True
SOCIAL_AUTH_PROTECTED_USER_FIELDS = [
    "username",
    "id",
    "pk",
    "password",
    "is_active",
    "is_staff",
    "is_superuser",
]
SOCIAL_AUTH_IMMUTABLE_USER_FIELDS = ["email"]
SOCIAL_AUTH_LOGIN_REDIRECT_URL = "/"
# Providers
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get("BETA_SPRAY_GOOGLE_CLIENT_ID")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get(
    "BETA_SPRAY_GOOGLE_CLIENT_SECRET"
)
# Disable `profile` scope, we don't want any real names
SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ["openid", "email"]

ROOT_URLCONF = "beta_spray.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "beta_spray.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.getenv(
            "BETA_SPRAY_DB_BACKEND", "django.db.backends.postgresql"
        ),
        "NAME": os.getenv("BETA_SPRAY_DB_NAME", "beta_spray"),
        "USER": os.getenv("BETA_SPRAY_DB_USER", "beta_spray"),
        "PASSWORD": os.getenv("BETA_SPRAY_DB_PASSWORD", "beta_spray"),
        "HOST": os.getenv("BETA_SPRAY_DB_HOST", "localhost"),
        "PORT": 5432,
        "ATOMIC_REQUESTS": True,
    }
}

# TODO encrypt backups
# https://django-dbbackup.readthedocs.io/en/master/configuration.html#encrypting-your-backups
DBBACKUP_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
DBBACKUP_STORAGE_OPTIONS = {
    "bucket_name": os.getenv("BETA_SPRAY_BACKUP_BUCKET"),
    "blob_chunk_size": 1024 * 1024,
    # Needed to override the default ACL from the media bucket
    "default_acl": None,
}
DBBACKUP_FILENAME_TEMPLATE = "backup-db-{databasename}-{datetime}.{extension}"
DBBACKUP_MEDIA_FILENAME_TEMPLATE = "backup-media-{datetime}.{extension}"
# 3 days worth of history
DBBACKUP_CLEANUP_KEEP = 12
DBBACKUP_CLEANUP_KEEP_MEDIA = 12

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Home-rolled field, we'll export the schema to this path on every startup
GRAPHQL_SCHEMA_PATH = BASE_DIR / "schema.graphql"

APPEND_SLASH = False

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "filters": {
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        }
    },
    "formatters": {
        "simple": {
            "format": "{levelname} {name} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django.request": {
            "level": "DEBUG",
            "handlers": ["console"],
        },
        "django.server": {
            "level": "INFO",
            "handlers": ["console"],
        },
        "django.db.backends": {
            # Set to DEBUG to log DB queries
            "level": "INFO",
            "handlers": ["console"],
            "propagate": False,  # Prevent dupe logging
        },
    },
    "root": {"level": "INFO", "handlers": ["console"]},
}


# Media storage - if GCS bucket is set, use that, otherwise use local
GS_BUCKET_NAME = os.environ.get("BETA_SPRAY_MEDIA_BUCKET")
if GS_BUCKET_NAME:
    # NOTE - For dev, you'll need to pass a creds JSON file into the container
    # and set an env var GOOGLE_APPLICATION_CREDENTIALS to its path
    DEFAULT_FILE_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
    # See https://django-storages.readthedocs.io/en/latest/backends/gcloud.html
    GS_DEFAULT_ACL = "publicRead"  # Use unsigned URLs for public access
