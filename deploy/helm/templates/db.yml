apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: db
spec:
  serviceName: db
  selector:
    matchLabels:
      app: db
  replicas: 1
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:14-alpine
          resources:
            requests:
              cpu: 20m
              memory: 80Mi
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
              subPath: "{{ .Release.Namespace }}/data"
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: password
          ports:
            - containerPort: 5432
  # Request DO volume
  volumeClaimTemplates:
    - metadata:
        name: db-data
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: db
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: db
