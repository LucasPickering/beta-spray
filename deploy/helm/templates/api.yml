apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      serviceAccountName: "{{ .Values.apiServiceAccountName }}"
      # nodeSelector:
      #   # Make sure workload-based SA is available
      #   iam.gke.io/gke-metadata-server-enabled: "true"
      containers:
        - name: api
          image: "ghcr.io/lucaspickering/beta-spray-api:{{ .Values.versionSha }}"
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
              ephemeral-storage: 100Mi
          env:
            - name: BETA_SPRAY_HOSTNAME
              value: "{{ .Values.hostname }}"
            - name: BETA_SPRAY_DB_HOST
              value: db
            - name: BETA_SPRAY_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: database
            - name: BETA_SPRAY_DB_USER
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: username
            - name: BETA_SPRAY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: password
            - name: BETA_SPRAY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: api-secret-key
                  key: secret-key
            - name: BETA_SPRAY_MEDIA_BUCKET
              value: "{{ .Values.mediaBucket }}"
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: api
spec:
  type: ClusterIP
  ports:
    - port: 8000
  selector:
    app: api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Values.apiServiceAccountName }}"
  namespace: "{{ .Release.Namespace }}"
  annotations:
    # Link to GCP SA
    iam.gke.io/gcp-service-account: "{{ .Values.apiServiceAccountEmail }}"
automountServiceAccountToken: false
