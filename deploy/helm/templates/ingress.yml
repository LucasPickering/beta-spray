apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-static-assets
  namespace: "{{ .Release.Namespace }}"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # This shouldn't be necessary since Cloudflare shouldn't let any HTTP
    # through to us, but let's be extra safe
    nginx.org/redirect-to-https: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/upstream-vhost: "{{ .Values.staticAssetsHost }}"
    nginx.ingress.kubernetes.io/rewrite-target: "/{{ .Values.staticAssetsBucket }}/{{  .Values.versionSha  }}$uri"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Anything that doesn't have a . after the last slash (i.e. no file
      # extension) is considered a SPA route. This is jank, but try_files doesn't
      # seem to work with GCS so this is the next best option.
      rewrite ^/$ /index.html;
      rewrite /[^./]+$ /index.html;
spec:
  tls:
    - hosts:
        - "{{ .Values.hostname }}"
      secretName: ssl-certificate
  rules:
    - host: "{{ .Values.hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: google-storage-buckets
                port:
                  number: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-api
  namespace: "{{ .Release.Namespace }}"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # This shouldn't be necessary since Cloudflare shouldn't let any HTTP
    # through to us, but let's be extra safe
    nginx.org/redirect-to-https: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    # API doesn't run HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  tls:
    - hosts:
        - "{{ .Values.hostname }}"
      secretName: ssl-certificate
  rules:
    - host: "{{ .Values.hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /api/
            backend:
              service:
                name: api
                port:
                  number: 8000
---
kind: Service
apiVersion: v1
metadata:
  name: google-storage-buckets
  namespace: "{{ .Release.Namespace }}"
spec:
  type: ExternalName
  externalName: "{{ .Values.staticAssetsHost }}"
